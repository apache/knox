<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.knox</groupId>
        <artifactId>gateway</artifactId>
        <version>2.1.0-SNAPSHOT</version>
    </parent>
    <artifactId>gateway-docker</artifactId>

    <name>gateway-docker</name>
    <description>Docker images for the Apache Knox project</description>

    <dependencies>
        <dependency>
            <groupId>org.apache.knox</groupId>
            <artifactId>gateway-release</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- Use the execution instead of configuration to bind it to package -->
                <executions>
                    <execution>
                        <id>binary-assembly</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/docker-files.xml</descriptor>
                            </descriptors>
                            <tarLongFileMode>gnu</tarLongFileMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!--
        Profile for building official Docker images.
        Not bound to build phases since that would require anyone build to have the
        Docker engine installed on their machine.
        Builds multi arch docker images, based on ${docker.platforms} property see: https://dmp.fabric8.io/#docker:build
         -->
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/docker</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/../target/${project.version}</directory>
                                            <includes>
                                                <include>knox-${project.version}.zip</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>knox-gateway-buildx</alias>
                                    <name>knox-gateway:${project.version}</name>

                                    <build>
                                        <contextDir>${project.build.outputDirectory}/docker</contextDir>
                                        <args>
                                            <RELEASE_FILE>knox-${project.version}.zip</RELEASE_FILE>
                                            <ENTRYPOINT>gateway-entrypoint.sh</ENTRYPOINT>
                                            <EXPOSE_PORT>8443</EXPOSE_PORT>
                                        </args>
                                        <entryPoint>gateway-entrypoint.sh</entryPoint>
                                        <buildx>
                                            <platforms>
                                                <platform>${docker.platforms}</platform>
                                            </platforms>
                                        </buildx>
                                    </build>
                                </image>

                                <image>
                                    <alias>knox-demo-ldap-buildx</alias>
                                    <name>knox-demo-ldap:${project.version}</name>
                                    <build>
                                        <contextDir>${project.build.outputDirectory}/docker</contextDir>
                                        <args>
                                            <RELEASE_FILE>knox-${project.version}.zip</RELEASE_FILE>
                                            <ENTRYPOINT>ldap-entrypoint.sh</ENTRYPOINT>
                                            <EXPOSE_PORT>33389</EXPOSE_PORT>
                                        </args>
                                        <entryPoint>ldap-entrypoint.sh</entryPoint>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>